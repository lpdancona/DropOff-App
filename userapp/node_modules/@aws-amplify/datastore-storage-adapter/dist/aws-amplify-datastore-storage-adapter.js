(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@aws-amplify/core"), require("@aws-amplify/datastore"), require("react-native-sqlite-storage"));
	else if(typeof define === 'function' && define.amd)
		define("aws-amplify-datastore-storage-adapter", ["@aws-amplify/core", "@aws-amplify/datastore", "react-native-sqlite-storage"], factory);
	else if(typeof exports === 'object')
		exports["aws-amplify-datastore-storage-adapter"] = factory(require("@aws-amplify/core"), require("@aws-amplify/datastore"), require("react-native-sqlite-storage"));
	else
		root["aws-amplify-datastore-storage-adapter"] = factory(root["@aws-amplify/core"], root["@aws-amplify/datastore"], root["react-native-sqlite-storage"]);
})(self, (__WEBPACK_EXTERNAL_MODULE__aws_amplify_core__, __WEBPACK_EXTERNAL_MODULE__aws_amplify_datastore__, __WEBPACK_EXTERNAL_MODULE_react_native_sqlite_storage__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./lib-esm/SQLiteAdapter/SQLiteAdapter.js":
/*!************************************************!*\
  !*** ./lib-esm/SQLiteAdapter/SQLiteAdapter.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_CommonSQLiteAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/CommonSQLiteAdapter */ "./lib-esm/common/CommonSQLiteAdapter.js");
/* harmony import */ var _SQLiteDatabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SQLiteDatabase */ "./lib-esm/SQLiteAdapter/SQLiteDatabase.js");
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var SQLiteAdapter = new _common_CommonSQLiteAdapter__WEBPACK_IMPORTED_MODULE_0__.CommonSQLiteAdapter(new _SQLiteDatabase__WEBPACK_IMPORTED_MODULE_1__["default"]());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SQLiteAdapter);

/***/ }),

/***/ "./lib-esm/SQLiteAdapter/SQLiteDatabase.js":
/*!*************************************************!*\
  !*** ./lib-esm/SQLiteAdapter/SQLiteDatabase.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-native-sqlite-storage */ "react-native-sqlite-storage");
/* harmony import */ var react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ "@aws-amplify/core");
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/constants */ "./lib-esm/common/constants.js");

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('SQLiteDatabase');
react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0___default().enablePromise(true);
if (_aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger.LOG_LEVEL === 'DEBUG') {
  react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0___default().DEBUG(true);
}
/*

Note:
I purposely avoided using arrow functions () => {} in this class,
Because I ran into issues with them in some of the SQLite method callbacks

Also, even though the SQLite library is promisified, certain operations
only work correctly with callbacks. Specifically, any time you need to
get the result of an `executeSql` command inside of a transaction
(see the batchQuery method below)

*/
var SQLiteDatabase = /** @class */function () {
  function SQLiteDatabase() {}
  SQLiteDatabase.prototype.init = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var _a;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            if (!!this.db) return [3 /*break*/, 2];
            _a = this;
            return [4 /*yield*/, react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0___default().openDatabase({
              name: _common_constants__WEBPACK_IMPORTED_MODULE_2__.DB_NAME,
              location: 'default'
            })];
          case 1:
            _a.db = _b.sent();
            _b.label = 2;
          case 2:
            return [2 /*return*/];
        }
      });
    });
  };

  SQLiteDatabase.prototype.createSchema = function (statements) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.executeStatements(statements)];
          case 1:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  SQLiteDatabase.prototype.clear = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.closeDB()];
          case 1:
            _a.sent();
            logger.debug('Deleting database');
            return [4 /*yield*/, react_native_sqlite_storage__WEBPACK_IMPORTED_MODULE_0___default().deleteDatabase({
              name: _common_constants__WEBPACK_IMPORTED_MODULE_2__.DB_NAME,
              location: 'default'
            })];
          case 2:
            _a.sent();
            logger.debug('Database deleted');
            return [2 /*return*/];
        }
      });
    });
  };

  SQLiteDatabase.prototype.get = function (statement, params) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var results;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.getAll(statement, params)];
          case 1:
            results = _a.sent();
            return [2 /*return*/, results[0]];
        }
      });
    });
  };
  SQLiteDatabase.prototype.getAll = function (statement, params) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var _a, resultSet, result;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            return [4 /*yield*/, this.db.executeSql(statement, params)];
          case 1:
            _a = tslib__WEBPACK_IMPORTED_MODULE_3__.__read.apply(void 0, [_b.sent(), 1]), resultSet = _a[0];
            result = resultSet && resultSet.rows && resultSet.rows.length && resultSet.rows.raw && resultSet.rows.raw();
            return [2 /*return*/, result || []];
        }
      });
    });
  };
  SQLiteDatabase.prototype.save = function (statement, params) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.db.executeSql(statement, params)];
          case 1:
            _a.sent();
            return [2 /*return*/];
        }
      });
    });
  };

  SQLiteDatabase.prototype.batchQuery = function (queryParameterizedStatements) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var results;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            results = [];
            return [4 /*yield*/, this.db.readTransaction(function (tx) {
              var e_1, _a;
              try {
                for (var queryParameterizedStatements_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(queryParameterizedStatements), queryParameterizedStatements_1_1 = queryParameterizedStatements_1.next(); !queryParameterizedStatements_1_1.done; queryParameterizedStatements_1_1 = queryParameterizedStatements_1.next()) {
                  var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(queryParameterizedStatements_1_1.value, 2),
                    statement = _b[0],
                    params = _b[1];
                  tx.executeSql(statement, params, function (_, res) {
                    results.push(res.rows.raw()[0]);
                  }, logger.warn);
                }
              } catch (e_1_1) {
                e_1 = {
                  error: e_1_1
                };
              } finally {
                try {
                  if (queryParameterizedStatements_1_1 && !queryParameterizedStatements_1_1.done && (_a = queryParameterizedStatements_1["return"])) _a.call(queryParameterizedStatements_1);
                } finally {
                  if (e_1) throw e_1.error;
                }
              }
            })];
          case 1:
            _a.sent();
            return [2 /*return*/, results];
        }
      });
    });
  };
  SQLiteDatabase.prototype.batchSave = function (saveParameterizedStatements, deleteParameterizedStatements) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.db.transaction(function (tx) {
              var e_2, _a;
              try {
                for (var saveParameterizedStatements_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(saveParameterizedStatements), saveParameterizedStatements_1_1 = saveParameterizedStatements_1.next(); !saveParameterizedStatements_1_1.done; saveParameterizedStatements_1_1 = saveParameterizedStatements_1.next()) {
                  var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(saveParameterizedStatements_1_1.value, 2),
                    statement = _b[0],
                    params = _b[1];
                  tx.executeSql(statement, params);
                }
              } catch (e_2_1) {
                e_2 = {
                  error: e_2_1
                };
              } finally {
                try {
                  if (saveParameterizedStatements_1_1 && !saveParameterizedStatements_1_1.done && (_a = saveParameterizedStatements_1["return"])) _a.call(saveParameterizedStatements_1);
                } finally {
                  if (e_2) throw e_2.error;
                }
              }
            })];
          case 1:
            _a.sent();
            if (!deleteParameterizedStatements) return [3 /*break*/, 3];
            return [4 /*yield*/, this.db.transaction(function (tx) {
              var e_3, _a;
              try {
                for (var deleteParameterizedStatements_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(deleteParameterizedStatements), deleteParameterizedStatements_1_1 = deleteParameterizedStatements_1.next(); !deleteParameterizedStatements_1_1.done; deleteParameterizedStatements_1_1 = deleteParameterizedStatements_1.next()) {
                  var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(deleteParameterizedStatements_1_1.value, 2),
                    statement = _b[0],
                    params = _b[1];
                  tx.executeSql(statement, params);
                }
              } catch (e_3_1) {
                e_3 = {
                  error: e_3_1
                };
              } finally {
                try {
                  if (deleteParameterizedStatements_1_1 && !deleteParameterizedStatements_1_1.done && (_a = deleteParameterizedStatements_1["return"])) _a.call(deleteParameterizedStatements_1);
                } finally {
                  if (e_3) throw e_3.error;
                }
              }
            })];
          case 2:
            _a.sent();
            _a.label = 3;
          case 3:
            return [2 /*return*/];
        }
      });
    });
  };

  SQLiteDatabase.prototype.selectAndDelete = function (queryParameterizedStatement, deleteParameterizedStatement) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var results, _a, queryStatement, queryParams, _b, deleteStatement, deleteParams;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_c) {
        switch (_c.label) {
          case 0:
            results = [];
            _a = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(queryParameterizedStatement, 2), queryStatement = _a[0], queryParams = _a[1];
            _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)(deleteParameterizedStatement, 2), deleteStatement = _b[0], deleteParams = _b[1];
            return [4 /*yield*/, this.db.transaction(function (tx) {
              tx.executeSql(queryStatement, queryParams, function (_, res) {
                results = res.rows.raw();
              }, logger.warn);
              tx.executeSql(deleteStatement, deleteParams, function () {}, logger.warn);
            })];
          case 1:
            _c.sent();
            return [2 /*return*/, results];
        }
      });
    });
  };
  SQLiteDatabase.prototype.executeStatements = function (statements) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.db.transaction(function (tx) {
              var e_4, _a;
              try {
                for (var statements_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(statements), statements_1_1 = statements_1.next(); !statements_1_1.done; statements_1_1 = statements_1.next()) {
                  var statement = statements_1_1.value;
                  tx.executeSql(statement);
                }
              } catch (e_4_1) {
                e_4 = {
                  error: e_4_1
                };
              } finally {
                try {
                  if (statements_1_1 && !statements_1_1.done && (_a = statements_1["return"])) _a.call(statements_1);
                } finally {
                  if (e_4) throw e_4.error;
                }
              }
            })];
          case 1:
            _a.sent();
            return [2 /*return*/];
        }
      });
    });
  };

  SQLiteDatabase.prototype.closeDB = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!this.db) return [3 /*break*/, 2];
            logger.debug('Closing Database');
            return [4 /*yield*/, this.db.close()];
          case 1:
            _a.sent();
            logger.debug('Database closed');
            this.db = undefined;
            _a.label = 2;
          case 2:
            return [2 /*return*/];
        }
      });
    });
  };

  return SQLiteDatabase;
}();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SQLiteDatabase);

/***/ }),

/***/ "./lib-esm/common/CommonSQLiteAdapter.js":
/*!***********************************************!*\
  !*** ./lib-esm/common/CommonSQLiteAdapter.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommonSQLiteAdapter: () => (/* binding */ CommonSQLiteAdapter)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ "@aws-amplify/core");
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/SQLiteUtils */ "./lib-esm/common/SQLiteUtils.js");
/* harmony import */ var _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/datastore */ "@aws-amplify/datastore");
/* harmony import */ var _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__);

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var traverseModel = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.utils.traverseModel,
  validatePredicate = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.utils.validatePredicate,
  isModelConstructor = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.utils.isModelConstructor;
var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('DataStore');
var CommonSQLiteAdapter = /** @class */function () {
  function CommonSQLiteAdapter(db) {
    this.db = db;
  }
  CommonSQLiteAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var usesCPKCodegen, statements, error_1;
      var _this = this;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!!this.initPromise) return [3 /*break*/, 1];
            this.initPromise = new Promise(function (res, rej) {
              _this.resolve = res;
              _this.reject = rej;
            });
            return [3 /*break*/, 3];
          case 1:
            return [4 /*yield*/, this.initPromise];
          case 2:
            _a.sent();
            return [2 /*return*/];
          case 3:
            this.schema = theSchema;
            this.namespaceResolver = namespaceResolver;
            this.modelInstanceCreator = modelInstanceCreator;
            this.getModelConstructorByModelName = getModelConstructorByModelName;
            _a.label = 4;
          case 4:
            _a.trys.push([4, 7,, 8]);
            usesCPKCodegen = Object.values(this.schema.namespaces.user.models).some(function (model) {
              return Object.values(model.fields).some(function (field) {
                var _a;
                return (_a = field.association) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('targetNames');
              });
            });
            if (usesCPKCodegen) {
              logger.error('The SQLite adapter does not support schemas using custom primary key. Set `graphQLTransformer.respectPrimaryKeyAttributesOnConnectionField in `amplify/cli.json` to false to disable custom primary key. To regenerate your API, add or remove an empty newline to your GraphQL schema (to change the computed hash) then run `amplify push`.');
            }
            return [4 /*yield*/, this.db.init()];
          case 5:
            _a.sent();
            statements = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.generateSchemaStatements)(this.schema);
            return [4 /*yield*/, this.db.createSchema(statements)];
          case 6:
            _a.sent();
            this.resolve();
            return [3 /*break*/, 8];
          case 7:
            error_1 = _a.sent();
            this.reject(error_1);
            return [3 /*break*/, 8];
          case 8:
            return [2 /*return*/];
        }
      });
    });
  };

  CommonSQLiteAdapter.prototype.clear = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4 /*yield*/, this.db.clear()];
          case 1:
            _a.sent();
            this.initPromise = undefined;
            return [2 /*return*/];
        }
      });
    });
  };

  CommonSQLiteAdapter.prototype.save = function (model, condition) {
    var e_1, _a;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var modelConstructor, tableName, connectedModels, connectionStoreNames, _b, queryStatement, params, fromDB, predicates, predicateObjs, type, isValid, msg, result, saveStatements, connectionStoreNames_1, connectionStoreNames_1_1, resItem, modelName, item, instance, id, _c, queryStatement_1, params_1, fromDB_1, opType, saveStatement, e_1_1;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_d) {
        switch (_d.label) {
          case 0:
            modelConstructor = Object.getPrototypeOf(model).constructor;
            tableName = modelConstructor.name;
            connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[this.namespaceResolver(modelConstructor)], this.modelInstanceCreator, this.getModelConstructorByModelName);
            connectionStoreNames = Object.values(connectedModels).map(function (_a) {
              var modelName = _a.modelName,
                item = _a.item,
                instance = _a.instance;
              return {
                modelName: modelName,
                item: item,
                instance: instance
              };
            });
            _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryByIdStatement)(model.id, tableName), 2), queryStatement = _b[0], params = _b[1];
            return [4 /*yield*/, this.db.get(queryStatement, params)];
          case 1:
            fromDB = _d.sent();
            if (condition && fromDB) {
              predicates = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.ModelPredicateCreator.getPredicates(condition);
              predicateObjs = predicates.predicates, type = predicates.type;
              isValid = validatePredicate(fromDB, type, predicateObjs);
              if (!isValid) {
                msg = 'Conditional update failed';
                logger.error(msg, {
                  model: fromDB,
                  condition: predicateObjs
                });
                throw new Error(msg);
              }
            }
            result = [];
            saveStatements = new Set();
            _d.label = 2;
          case 2:
            _d.trys.push([2, 8, 9, 14]);
            connectionStoreNames_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncValues)(connectionStoreNames);
            _d.label = 3;
          case 3:
            return [4 /*yield*/, connectionStoreNames_1.next()];
          case 4:
            if (!(connectionStoreNames_1_1 = _d.sent(), !connectionStoreNames_1_1.done)) return [3 /*break*/, 7];
            resItem = connectionStoreNames_1_1.value;
            modelName = resItem.modelName, item = resItem.item, instance = resItem.instance;
            id = item.id;
            _c = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryByIdStatement)(id, modelName), 2), queryStatement_1 = _c[0], params_1 = _c[1];
            return [4 /*yield*/, this.db.get(queryStatement_1, params_1)];
          case 5:
            fromDB_1 = _d.sent();
            opType = fromDB_1 === undefined ? _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.OpType.INSERT : _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.OpType.UPDATE;
            saveStatement = fromDB_1 ? (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.modelUpdateStatement)(instance, modelName) : (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.modelInsertStatement)(instance, modelName);
            if (id === model.id || opType === _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.OpType.INSERT) {
              saveStatements.add(saveStatement);
              result.push([instance, opType]);
            }
            _d.label = 6;
          case 6:
            return [3 /*break*/, 3];
          case 7:
            return [3 /*break*/, 14];
          case 8:
            e_1_1 = _d.sent();
            e_1 = {
              error: e_1_1
            };
            return [3 /*break*/, 14];
          case 9:
            _d.trys.push([9,, 12, 13]);
            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1["return"]))) return [3 /*break*/, 11];
            return [4 /*yield*/, _a.call(connectionStoreNames_1)];
          case 10:
            _d.sent();
            _d.label = 11;
          case 11:
            return [3 /*break*/, 13];
          case 12:
            if (e_1) throw e_1.error;
            return [7 /*endfinally*/];
          case 13:
            return [7 /*endfinally*/];
          case 14:
            return [4 /*yield*/, this.db.batchSave(saveStatements)];
          case 15:
            _d.sent();
            return [2 /*return*/, result];
        }
      });
    });
  };
  CommonSQLiteAdapter.prototype.load = function (namespaceName, srcModelName, records) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var namespace, relations, connectionTableNames, modelConstructor;
      var _this = this;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        namespace = this.schema.namespaces[namespaceName];
        relations = namespace.relationships[srcModelName].relationTypes;
        connectionTableNames = relations.map(function (_a) {
          var modelName = _a.modelName;
          return modelName;
        });
        modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);
        if (connectionTableNames.length === 0) {
          return [2 /*return*/, records.map(function (record) {
            return _this.modelInstanceCreator(modelConstructor, record);
          })];
        }
        // Remove related-model fields. They're all `null` in the database,
        // and any that happen to be required will result in a false validation
        // error when DataStore attempts to initialize with `null`.
        // These fields aren't actually needed here. DataStore will use the FK's
        // from the schema model.
        return [2 /*return*/, records.map(function (record) {
          var e_2, _a;
          try {
            for (var relations_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(relations), relations_1_1 = relations_1.next(); !relations_1_1.done; relations_1_1 = relations_1.next()) {
              var r = relations_1_1.value;
              delete record[r.fieldName];
            }
          } catch (e_2_1) {
            e_2 = {
              error: e_2_1
            };
          } finally {
            try {
              if (relations_1_1 && !relations_1_1.done && (_a = relations_1["return"])) _a.call(relations_1);
            } finally {
              if (e_2) throw e_2.error;
            }
          }
          return _this.modelInstanceCreator(modelConstructor, record);
        })];
      });
    });
  };
  CommonSQLiteAdapter.prototype.query = function (modelConstructor, predicate, pagination) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var tableName, namespaceName, predicates, sortPredicates, limit, page, queryById, records;
      var _this = this;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            tableName = modelConstructor.name;
            namespaceName = this.namespaceResolver(modelConstructor);
            predicates = predicate && _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.ModelPredicateCreator.getPredicates(predicate);
            sortPredicates = pagination && pagination.sort && _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.ModelSortPredicateCreator.getPredicates(pagination.sort);
            limit = pagination && pagination.limit;
            page = limit && pagination.page;
            queryById = predicates && this.idFromPredicate(predicates);
            return [4 /*yield*/, function () {
              return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(_this, void 0, void 0, function () {
                var record, _a, queryStatement, params;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
                  switch (_b.label) {
                    case 0:
                      if (!queryById) return [3 /*break*/, 2];
                      return [4 /*yield*/, this.getById(tableName, queryById)];
                    case 1:
                      record = _b.sent();
                      return [2 /*return*/, record ? [record] : []];
                    case 2:
                      _a = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryAllStatement)(tableName, predicates, sortPredicates, limit, page), 2), queryStatement = _a[0], params = _a[1];
                      return [4 /*yield*/, this.db.getAll(queryStatement, params)];
                    case 3:
                      return [2 /*return*/, _b.sent()];
                  }
                });
              });
            }()];
          case 1:
            records = _a.sent();
            return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, records)];
          case 2:
            return [2 /*return*/, _a.sent()];
        }
      });
    });
  };
  CommonSQLiteAdapter.prototype.getById = function (tableName, id) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var _a, queryStatement, params, record;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            _a = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryByIdStatement)(id, tableName), 2), queryStatement = _a[0], params = _a[1];
            return [4 /*yield*/, this.db.get(queryStatement, params)];
          case 1:
            record = _b.sent();
            return [2 /*return*/, record];
        }
      });
    });
  };
  CommonSQLiteAdapter.prototype.idFromPredicate = function (predicates) {
    var predicateObjs = predicates.predicates;
    var idPredicate = predicateObjs.length === 1 && predicateObjs.find(function (p) {
      return (0,_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.isPredicateObj)(p) && p.field === 'id' && p.operator === 'eq';
    });
    return idPredicate && idPredicate.operand;
  };
  CommonSQLiteAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {
    if (firstOrLast === void 0) {
      firstOrLast = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.QueryOne.FIRST;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var tableName, _a, queryStatement, params, result, modelInstance;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            tableName = modelConstructor.name;
            _a = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryOneStatement)(firstOrLast, tableName), 2), queryStatement = _a[0], params = _a[1];
            return [4 /*yield*/, this.db.get(queryStatement, params)];
          case 1:
            result = _b.sent();
            modelInstance = result && this.modelInstanceCreator(modelConstructor, result);
            return [2 /*return*/, modelInstance];
        }
      });
    });
  };
  // Currently does not cascade
  // TODO: use FKs in relations and have `ON DELETE CASCADE` set
  // For Has Many and Has One relations to have SQL handle cascades automatically
  CommonSQLiteAdapter.prototype["delete"] = function (modelOrModelConstructor, condition) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var modelConstructor, namespaceName, tableName, predicates, queryStatement, deleteStatement, models, modelInstances, model, modelConstructor, tableName, _a, queryStatement, params, fromDB, msg, predicates, predicateObjs, type, isValid, msg, _b, deleteStatement, deleteParams, _c, deleteStatement, params;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_d) {
        switch (_d.label) {
          case 0:
            if (!isModelConstructor(modelOrModelConstructor)) return [3 /*break*/, 3];
            modelConstructor = modelOrModelConstructor;
            namespaceName = this.namespaceResolver(modelConstructor);
            tableName = modelConstructor.name;
            predicates = condition && _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.ModelPredicateCreator.getPredicates(condition);
            queryStatement = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryAllStatement)(tableName, predicates);
            deleteStatement = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.deleteByPredicateStatement)(tableName, predicates);
            return [4 /*yield*/, this.db.selectAndDelete(queryStatement, deleteStatement)];
          case 1:
            models = _d.sent();
            return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, models)];
          case 2:
            modelInstances = _d.sent();
            return [2 /*return*/, [modelInstances, modelInstances]];
          case 3:
            model = modelOrModelConstructor;
            modelConstructor = Object.getPrototypeOf(model).constructor;
            tableName = modelConstructor.name;
            if (!condition) return [3 /*break*/, 6];
            _a = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryByIdStatement)(model.id, tableName), 2), queryStatement = _a[0], params = _a[1];
            return [4 /*yield*/, this.db.get(queryStatement, params)];
          case 4:
            fromDB = _d.sent();
            if (fromDB === undefined) {
              msg = 'Model instance not found in storage';
              logger.warn(msg, {
                model: model
              });
              return [2 /*return*/, [[model], []]];
            }
            predicates = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.ModelPredicateCreator.getPredicates(condition);
            predicateObjs = predicates.predicates, type = predicates.type;
            isValid = validatePredicate(fromDB, type, predicateObjs);
            if (!isValid) {
              msg = 'Conditional update failed';
              logger.error(msg, {
                model: fromDB,
                condition: predicateObjs
              });
              throw new Error(msg);
            }
            _b = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.deleteByIdStatement)(model.id, tableName), 2), deleteStatement = _b[0], deleteParams = _b[1];
            return [4 /*yield*/, this.db.save(deleteStatement, deleteParams)];
          case 5:
            _d.sent();
            return [2 /*return*/, [[model], [model]]];
          case 6:
            _c = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__read)((0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.deleteByIdStatement)(model.id, tableName), 2), deleteStatement = _c[0], params = _c[1];
            return [4 /*yield*/, this.db.save(deleteStatement, params)];
          case 7:
            _d.sent();
            return [2 /*return*/, [[model], [model]]];
        }
      });
    });
  };
  CommonSQLiteAdapter.prototype.batchSave = function (modelConstructor, items) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function () {
      var tableName, result, itemsToSave, queryStatements, deleteStatements, saveStatements, _loop_1, this_1, items_1, items_1_1, item, queryResponses;
      var e_3, _a;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            tableName = modelConstructor.name;
            result = [];
            itemsToSave = [];
            queryStatements = new Set();
            deleteStatements = new Set();
            saveStatements = new Set();
            _loop_1 = function _loop_1(item) {
              var connectedModels = traverseModel(modelConstructor.name, this_1.modelInstanceCreator(modelConstructor, item), this_1.schema.namespaces[this_1.namespaceResolver(modelConstructor)], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);
              var id = item.id,
                _deleted = item._deleted;
              var instance = connectedModels.find(function (_a) {
                var instance = _a.instance;
                return instance.id === id;
              }).instance;
              if (_deleted) {
                // create the delete statements right away
                var deleteStatement = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.deleteByIdStatement)(instance.id, tableName);
                deleteStatements.add(deleteStatement);
                result.push([item, _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.OpType.DELETE]);
              } else {
                // query statements for the saves at first
                var queryStatement = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.queryByIdStatement)(id, tableName);
                queryStatements.add(queryStatement);
                // combination of insert and update items
                itemsToSave.push(instance);
              }
            };
            this_1 = this;
            try {
              for (items_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
                item = items_1_1.value;
                _loop_1(item);
              }
            } catch (e_3_1) {
              e_3 = {
                error: e_3_1
              };
            } finally {
              try {
                if (items_1_1 && !items_1_1.done && (_a = items_1["return"])) _a.call(items_1);
              } finally {
                if (e_3) throw e_3.error;
              }
            }
            return [4 /*yield*/, this.db.batchQuery(queryStatements)];
          case 1:
            queryResponses = _b.sent();
            queryResponses.forEach(function (response, idx) {
              if (response === undefined) {
                var insertStatement = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.modelInsertStatement)(itemsToSave[idx], tableName);
                saveStatements.add(insertStatement);
                result.push([itemsToSave[idx], _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.OpType.INSERT]);
              } else {
                var updateStatement = (0,_common_SQLiteUtils__WEBPACK_IMPORTED_MODULE_1__.modelUpdateStatement)(itemsToSave[idx], tableName);
                saveStatements.add(updateStatement);
                result.push([itemsToSave[idx], _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_2__.OpType.UPDATE]);
              }
            });
            // perform all of the insert/update/delete operations in a single transaction
            return [4 /*yield*/, this.db.batchSave(saveStatements, deleteStatements)];
          case 2:
            // perform all of the insert/update/delete operations in a single transaction
            _b.sent();
            return [2 /*return*/, result];
        }
      });
    });
  };
  return CommonSQLiteAdapter;
}();


/***/ }),

/***/ "./lib-esm/common/SQLiteUtils.js":
/*!***************************************!*\
  !*** ./lib-esm/common/SQLiteUtils.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   deleteByIdStatement: () => (/* binding */ deleteByIdStatement),
/* harmony export */   deleteByPredicateStatement: () => (/* binding */ deleteByPredicateStatement),
/* harmony export */   generateSchemaStatements: () => (/* binding */ generateSchemaStatements),
/* harmony export */   getSQLiteType: () => (/* binding */ getSQLiteType),
/* harmony export */   implicitAuthFieldsForModel: () => (/* binding */ implicitAuthFieldsForModel),
/* harmony export */   limitClauseFromPagination: () => (/* binding */ limitClauseFromPagination),
/* harmony export */   modelCreateTableStatement: () => (/* binding */ modelCreateTableStatement),
/* harmony export */   modelInsertStatement: () => (/* binding */ modelInsertStatement),
/* harmony export */   modelUpdateStatement: () => (/* binding */ modelUpdateStatement),
/* harmony export */   orderByClauseFromSort: () => (/* binding */ orderByClauseFromSort),
/* harmony export */   queryAllStatement: () => (/* binding */ queryAllStatement),
/* harmony export */   queryByIdStatement: () => (/* binding */ queryByIdStatement),
/* harmony export */   queryOneStatement: () => (/* binding */ queryOneStatement),
/* harmony export */   whereClauseFromPredicate: () => (/* binding */ whereClauseFromPredicate),
/* harmony export */   whereConditionFromPredicateObject: () => (/* binding */ whereConditionFromPredicateObject)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/datastore */ "@aws-amplify/datastore");
/* harmony import */ var _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__);
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var USER = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.utils.USER,
  isNonModelConstructor = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.utils.isNonModelConstructor,
  isModelConstructor = _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.utils.isModelConstructor;
var keysFromModel = function keysFromModel(model) {
  return Object.keys(model).map(function (k) {
    return "\"" + k + "\"";
  }).join(', ');
};
var valuesFromModel = function valuesFromModel(model) {
  var values = Object.values(model).map(prepareValueForDML);
  var paramaterized = values.map(function () {
    return '?';
  }).join(', ');
  return [paramaterized, values];
};
var updateSet = function updateSet(model) {
  var values = [];
  var paramaterized = Object.entries(model).filter(function (_a) {
    var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 1),
      k = _b[0];
    return k !== 'id';
  }).map(function (_a) {
    var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2),
      k = _b[0],
      v = _b[1];
    values.push(prepareValueForDML(v));
    return "\"" + k + "\"=?";
  }).join(', ');
  return [paramaterized, values];
};
function prepareValueForDML(value) {
  var scalarTypes = ['string', 'number', 'boolean'];
  var isScalarType = value === null || value === undefined || scalarTypes.includes(_typeof(value));
  if (isScalarType) {
    return value;
  }
  var isObjectType = _typeof(value) === 'object' && (Object.getPrototypeOf(value).constructor === Object || isNonModelConstructor(Object.getPrototypeOf(value).constructor) || isModelConstructor(Object.getPrototypeOf(value).constructor));
  if (Array.isArray(value) || isObjectType) {
    return JSON.stringify(value);
  }
  return "" + value;
}
function getSQLiteType(scalar) {
  switch (scalar) {
    case 'Boolean':
    case 'Int':
    case 'AWSTimestamp':
      return 'INTEGER';
    case 'ID':
    case 'String':
    case 'AWSDate':
    case 'AWSTime':
    case 'AWSDateTime':
    case 'AWSEmail':
    case 'AWSJSON':
    case 'AWSURL':
    case 'AWSPhone':
    case 'AWSIPAddress':
      return 'TEXT';
    case 'Float':
      return 'REAL';
    default:
      var _ = scalar;
      throw new Error("unknown type " + scalar);
  }
}
function generateSchemaStatements(schema) {
  return Object.keys(schema.namespaces).flatMap(function (namespaceName) {
    var namespace = schema.namespaces[namespaceName];
    var isUserModel = namespaceName === USER;
    return Object.values(namespace.models).map(function (model) {
      return modelCreateTableStatement(model, isUserModel);
    });
  });
}
var implicitAuthFieldsForModel = function implicitAuthFieldsForModel(model) {
  if (!model.attributes || !model.attributes.length) {
    return [];
  }
  var authRules = model.attributes.find(_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.isModelAttributeAuth);
  if (!authRules) {
    return [];
  }
  var authFieldsForModel = authRules.properties.rules.filter(function (rule) {
    return rule.ownerField || rule.groupsField;
  }).map(function (rule) {
    return rule.ownerField || rule.groupsField;
  });
  return authFieldsForModel.filter(function (authField) {
    var authFieldExplicitlyDefined = Object.values(model.fields).find(function (f) {
      return f.name === authField;
    });
    return !authFieldExplicitlyDefined;
  });
};
function modelCreateTableStatement(model, userModel) {
  if (userModel === void 0) {
    userModel = false;
  }
  // implicitly defined auth fields, e.g., `owner`, `groupsField`, etc.
  var implicitAuthFields = implicitAuthFieldsForModel(model);
  var fields = Object.values(model.fields).reduce(function (acc, field) {
    if ((0,_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.isGraphQLScalarType)(field.type)) {
      if (field.name === 'id') {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(acc, ['"id" PRIMARY KEY NOT NULL']);
      }
      var columnParam_1 = "\"" + field.name + "\" " + getSQLiteType(field.type);
      if (field.isRequired) {
        columnParam_1 += ' NOT NULL';
      }
      return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(acc, ["" + columnParam_1]);
    }
    if ((0,_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.isModelFieldType)(field.type)) {
      var columnParam_2 = "\"" + field.name + "\" TEXT";
      // add targetName as well as field name for BELONGS_TO relations
      if ((0,_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.isTargetNameAssociation)(field.association)) {
        // check if this field has been explicitly defined in the model
        var fkDefinedInModel = Object.values(model.fields).find(function (f) {
          var _a;
          return f.name === ((_a = field === null || field === void 0 ? void 0 : field.association) === null || _a === void 0 ? void 0 : _a.targetName);
        });
        // if the FK is not explicitly defined in the model, we have to add it here
        if (!fkDefinedInModel) {
          var required = field.isRequired ? ' NOT NULL' : '';
          columnParam_2 += ", \"" + field.association.targetName + "\" TEXT" + required;
        }
      }
      // ignore isRequired param for model fields, since they will not contain
      // the related data locally
      return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(acc, ["" + columnParam_2]);
    }
    // default to TEXT
    var columnParam = "\"" + field.name + "\" TEXT";
    if (field.isRequired) {
      columnParam += ' NOT NULL';
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(acc, ["" + columnParam]);
  }, []);
  implicitAuthFields.forEach(function (authField) {
    fields.push(authField + " TEXT");
  });
  if (userModel) {
    fields = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(fields, ["\"_version\" INTEGER", "\"_lastChangedAt\" INTEGER", "\"_deleted\" INTEGER"]);
  }
  var createTableStatement = "CREATE TABLE IF NOT EXISTS \"" + model.name + "\" (" + fields.join(', ') + ");";
  return createTableStatement;
}
function modelInsertStatement(model, tableName) {
  var keys = keysFromModel(model);
  var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(valuesFromModel(model), 2),
    paramaterized = _a[0],
    values = _a[1];
  var insertStatement = "INSERT INTO \"" + tableName + "\" (" + keys + ") VALUES (" + paramaterized + ")";
  return [insertStatement, values];
}
function modelUpdateStatement(model, tableName) {
  var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(updateSet(model), 2),
    paramaterized = _a[0],
    values = _a[1];
  var updateStatement = "UPDATE \"" + tableName + "\" SET " + paramaterized + " WHERE id=?";
  return [updateStatement, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(values, [model.id])];
}
function queryByIdStatement(id, tableName) {
  return ["SELECT * FROM \"" + tableName + "\" WHERE \"id\" = ?", [id]];
}
/*
    Predicates supported by DataStore:

    Strings: eq | ne | le | lt | ge | gt | contains | notContains | beginsWith | between
    Numbers: eq | ne | le | lt | ge | gt | between
    Lists: contains | notContains
*/
var comparisonOperatorMap = {
  eq: '=',
  ne: '!=',
  le: '<=',
  lt: '<',
  ge: '>=',
  gt: '>'
};
var logicalOperatorMap = {
  beginsWith: '= 1',
  contains: '> 0',
  notContains: '= 0',
  between: 'BETWEEN'
};
/**
 * If the given (operator, operand) indicate the need for a special `NULL` comparison,
 * that `WHERE` clause condition will be returned. If not special `NULL` handling is
 * needed, `null` will be returned, and the caller should construct the `WHERE`
 * clause component using the normal operator map(s) and parameterization.
 *
 * @param operator "beginsWith" | "contains" | "notContains" | "between"
 * | "eq" | "ne" | "le" | "lt" | "ge" | "gt"
 * @param operand any
 * @returns (string | null) The `WHERE` clause component or `null` if N/A.
 */
function buildSpecialNullComparison(field, operator, operand) {
  if (operand === null || operand === undefined) {
    if (operator === 'eq') {
      return "\"" + field + "\" IS NULL";
    } else if (operator === 'ne') {
      return "\"" + field + "\" IS NOT NULL";
    }
  }
  // no special null handling required
  return null;
}
var whereConditionFromPredicateObject = function whereConditionFromPredicateObject(_a) {
  var field = _a.field,
    operator = _a.operator,
    operand = _a.operand;
  var specialNullClause = buildSpecialNullComparison(field, operator, operand);
  if (specialNullClause) {
    return [specialNullClause, []];
  }
  var comparisonOperator = comparisonOperatorMap[operator];
  if (comparisonOperator) {
    return ["\"" + field + "\" " + comparisonOperator + " ?", [operand]];
  }
  var logicalOperatorKey = operator;
  var logicalOperator = logicalOperatorMap[logicalOperatorKey];
  var statement;
  if (logicalOperator) {
    var rightExp = [];
    switch (logicalOperatorKey) {
      case 'between':
        rightExp = operand; // operand is a 2-tuple
        statement = ["\"" + field + "\" " + logicalOperator + " " + rightExp.map(function (_) {
          return '?';
        }).join(' AND '), rightExp];
        break;
      case 'beginsWith':
      case 'contains':
      case 'notContains':
        statement = ["instr(\"" + field + "\", ?) " + logicalOperator, [operand]];
        break;
      default:
        var _ = logicalOperatorKey;
        // Incorrect WHERE clause can result in data loss
        throw new Error('Cannot map predicate to a valid WHERE clause');
    }
    return statement;
  }
};
function whereClauseFromPredicate(predicate) {
  var result = [];
  var params = [];
  recurse(predicate, result, params);
  var whereClause = "WHERE " + result.join(' ');
  return [whereClause, params];
  function recurse(predicate, result, params) {
    var e_1, _a;
    if (result === void 0) {
      result = [];
    }
    if (params === void 0) {
      params = [];
    }
    if ((0,_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.isPredicateGroup)(predicate)) {
      var groupType = predicate.type,
        groupPredicates = predicate.predicates;
      var filterType = '';
      var isNegation = false;
      switch (groupType) {
        case 'not':
          isNegation = true;
          break;
        case 'and':
          filterType = 'AND';
          break;
        case 'or':
          filterType = 'OR';
          break;
        default:
          var _ = groupType;
          throw new Error("Invalid " + groupType);
      }
      var groupResult = [];
      try {
        for (var groupPredicates_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(groupPredicates), groupPredicates_1_1 = groupPredicates_1.next(); !groupPredicates_1_1.done; groupPredicates_1_1 = groupPredicates_1.next()) {
          var p = groupPredicates_1_1.value;
          recurse(p, groupResult, params);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (groupPredicates_1_1 && !groupPredicates_1_1.done && (_a = groupPredicates_1["return"])) _a.call(groupPredicates_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
      result.push((isNegation ? 'NOT' : '') + "(" + groupResult.join(" " + filterType + " ") + ")");
    } else if ((0,_aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.isPredicateObj)(predicate)) {
      var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(whereConditionFromPredicateObject(predicate), 2),
        condition = _b[0],
        conditionParams = _b[1];
      result.push(condition);
      params.push.apply(params, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(conditionParams));
    }
  }
}
var sortDirectionMap = {
  ASCENDING: 'ASC',
  DESCENDING: 'DESC'
};
function orderByClauseFromSort(sortPredicate) {
  if (sortPredicate === void 0) {
    sortPredicate = [];
  }
  var orderByParts = sortPredicate.map(function (_a) {
    var field = _a.field,
      sortDirection = _a.sortDirection;
    return "\"" + field + "\" " + sortDirectionMap[sortDirection];
  });
  // We always sort by _rowid_ last
  orderByParts.push("_rowid_ " + sortDirectionMap.ASCENDING);
  return "ORDER BY " + orderByParts.join(', ');
}
function limitClauseFromPagination(limit, page) {
  if (page === void 0) {
    page = 0;
  }
  var params = [limit];
  var clause = 'LIMIT ?';
  if (page) {
    var offset = limit * page;
    params.push(offset);
    clause += ' OFFSET ?';
  }
  return [clause, params];
}
function queryAllStatement(tableName, predicate, sort, limit, page) {
  var statement = "SELECT * FROM \"" + tableName + "\"";
  var params = [];
  if (predicate && predicate.predicates.length) {
    var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(whereClauseFromPredicate(predicate), 2),
      whereClause = _a[0],
      whereParams = _a[1];
    statement += " " + whereClause;
    params.push.apply(params, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(whereParams));
  }
  var orderByClause = orderByClauseFromSort(sort);
  statement += " " + orderByClause;
  if (limit) {
    var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(limitClauseFromPagination(limit, page), 2),
      limitClause = _b[0],
      limitParams = _b[1];
    statement += " " + limitClause;
    params.push.apply(params, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(limitParams));
  }
  return [statement, params];
}
function queryOneStatement(firstOrLast, tableName) {
  if (firstOrLast === _aws_amplify_datastore__WEBPACK_IMPORTED_MODULE_0__.QueryOne.FIRST) {
    // ORDER BY rowid will no longer work as expected if a customer has
    // a field by that name in their schema. We may want to enforce it
    // as a reserved keyword in Codegen
    return ["SELECT * FROM " + tableName + " ORDER BY _rowid_ LIMIT 1", []];
  } else {
    return ["SELECT * FROM " + tableName + " ORDER BY _rowid_ DESC LIMIT 1", []];
  }
}
function deleteByIdStatement(id, tableName) {
  var deleteStatement = "DELETE FROM \"" + tableName + "\" WHERE \"id\"=?";
  return [deleteStatement, [id]];
}
function deleteByPredicateStatement(tableName, predicate) {
  var statement = "DELETE FROM \"" + tableName + "\"";
  var params = [];
  if (predicate && predicate.predicates.length) {
    var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(whereClauseFromPredicate(predicate), 2),
      whereClause = _a[0],
      whereParams = _a[1];
    statement += " " + whereClause;
    params.push.apply(params, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(whereParams));
  }
  return [statement, params];
}

/***/ }),

/***/ "./lib-esm/common/constants.js":
/*!*************************************!*\
  !*** ./lib-esm/common/constants.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DB_NAME: () => (/* binding */ DB_NAME)
/* harmony export */ });
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var DB_NAME = 'AmplifyDatastore';

/***/ }),

/***/ "../../node_modules/tslib/tslib.es6.js":
/*!*********************************************!*\
  !*** ../../node_modules/tslib/tslib.es6.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __assign: () => (/* binding */ __assign),
/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),
/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),
/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),
/* harmony export */   __await: () => (/* binding */ __await),
/* harmony export */   __awaiter: () => (/* binding */ __awaiter),
/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   __createBinding: () => (/* binding */ __createBinding),
/* harmony export */   __decorate: () => (/* binding */ __decorate),
/* harmony export */   __exportStar: () => (/* binding */ __exportStar),
/* harmony export */   __extends: () => (/* binding */ __extends),
/* harmony export */   __generator: () => (/* binding */ __generator),
/* harmony export */   __importDefault: () => (/* binding */ __importDefault),
/* harmony export */   __importStar: () => (/* binding */ __importStar),
/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),
/* harmony export */   __metadata: () => (/* binding */ __metadata),
/* harmony export */   __param: () => (/* binding */ __param),
/* harmony export */   __read: () => (/* binding */ __read),
/* harmony export */   __rest: () => (/* binding */ __rest),
/* harmony export */   __spread: () => (/* binding */ __spread),
/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),
/* harmony export */   __values: () => (/* binding */ __values)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "@aws-amplify/core":
/*!************************************!*\
  !*** external "@aws-amplify/core" ***!
  \************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__aws_amplify_core__;

/***/ }),

/***/ "@aws-amplify/datastore":
/*!*****************************************!*\
  !*** external "@aws-amplify/datastore" ***!
  \*****************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__aws_amplify_datastore__;

/***/ }),

/***/ "react-native-sqlite-storage":
/*!**********************************************!*\
  !*** external "react-native-sqlite-storage" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_react_native_sqlite_storage__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**************************!*\
  !*** ./lib-esm/index.js ***!
  \**************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SQLiteAdapter: () => (/* reexport safe */ _SQLiteAdapter_SQLiteAdapter__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _SQLiteAdapter_SQLiteAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SQLiteAdapter/SQLiteAdapter */ "./lib-esm/SQLiteAdapter/SQLiteAdapter.js");
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=aws-amplify-datastore-storage-adapter.js.map